<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_vmw_ws1uem.WS1UEMGetOSField</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Return the OS Name for a provided device ID.</description>
        <name>WS1UEMGetOSField</name>
        <script><![CDATA[/**
Query for obtaining the OS Version and Name
given a device ID.
**/
var WS1UEMGetOSField = Class.create();
WS1UEMGetOSField.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
   get_os_field:function() {  
	var config_item = this.getParameter('sysparm_device_id');

	var config_table = new GlideRecordSecure("cmdb_ci");
	config_table.addQuery("sys_id", config_item);

	var status_code;   
	var error_log;
	var res;
	config_table.query();

	if (config_table.next()) {

		var class_name = config_table.sys_class_name;

			var child_table;
			if (class_name == 'cmdb_ci_computer') {
				item_table = new GlideRecordSecure('cmdb_ci_computer');
			} else if (class_name == 'cmdb_ci_handheld_computing') {
				item_table = new GlideRecordSecure('cmdb_ci_handheld_computing');
			} else {
				error_log = 'OS for device ' + config_item + ' not found in type ' + class_name;
				jslog(error_log);

				status_code = this.newItem('status');
				status_code.setAttribute('status', 400);
				
				error_log = this.newItem('error_log');
				error_log.setAttribute(error_log, error);
				
				return '';
			}

			item_table.addQuery("sys_id", config_item);
			item_table.query();
			if (item_table.next()) {
				status_code = this.newItem('status');
				status_code.setAttribute('status', 200);
				
				this.status = 202;
				var os_name = item_table.os;
				return os_name;
			}

		} else {

		error_log = 'Error with request ' + 'WS1UEMGetOSField' + ' when querying device ' + config_item;
		jslog(error_log);
		status_code = this.newItem('status');
		status_code.setAttribute('status', 400);

		error_log = this.newItem('error_log');
		error_log.setAttribute(error_log, error);

		return '';
	}
} ,
   _privateFunction: function() { // this function is not client callable     
    }
 });]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-01 16:45:25</sys_created_on>
        <sys_id>7a18534e1b1eb410a76c0dc0604bcb90</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>WS1UEMGetOSField</sys_name>
        <sys_package display_value="VMware Workspace ONE ITSM Connector" source="x_vmw_ws1uem">b110a7a11b12b41092ce8514604bcb28</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="VMware Workspace ONE ITSM Connector">b110a7a11b12b41092ce8514604bcb28</sys_scope>
        <sys_update_name>sys_script_include_7a18534e1b1eb410a76c0dc0604bcb90</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-01 18:52:13</sys_updated_on>
    </sys_script_include>
</record_update>
