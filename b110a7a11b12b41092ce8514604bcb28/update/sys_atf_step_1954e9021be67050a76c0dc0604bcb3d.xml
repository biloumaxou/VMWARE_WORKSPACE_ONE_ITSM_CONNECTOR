<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from display_value="Run Server Side Script">fef70a8d1b26fc10a76c0dc0604bcb47</copied_from>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>25</order>
        <snapshot/>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-13 18:35:05</sys_created_on>
        <sys_id>1954e9021be67050a76c0dc0604bcb3d</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="VMware Workspace ONE ITSM Connector" source="x_vmw_ws1uem">b110a7a11b12b41092ce8514604bcb28</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware Workspace ONE ITSM Connector">b110a7a11b12b41092ce8514604bcb28</sys_scope>
        <sys_update_name>sys_atf_step_1954e9021be67050a76c0dc0604bcb3d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-13 18:44:37</sys_updated_on>
        <table/>
        <test display_value="WS1UEmTestPopup_softreset">a054694e1ba67050a76c0dc0604bcbc2</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=1954e9021be67050a76c0dc0604bcb3d"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>1954e9021be67050a76c0dc0604bcb3d</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-13 18:35:05</sys_created_on>
        <sys_id>1154e9021be67050a76c0dc0604bcb3e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-13 18:35:05</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>1954e9021be67050a76c0dc0604bcb3d</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-13 18:35:05</sys_created_on>
        <sys_id>d154e9021be67050a76c0dc0604bcb3e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-13 18:35:05</sys_updated_on>
        <value>(function(outputs, steps, stepResult, assertEqual) {&#13;
    // add test script here&#13;
	// 552c48888c033300964f4932b03eb092&#13;
	&#13;
	// var sys_id = "552c48888c033300964f4932b03eb092";&#13;
	&#13;
	var gr = new GlideRecord('incident');&#13;
	var gr_properties = new GlideRecord('x_vmw_ws1uem_ws1_testing');&#13;
	&#13;
	//query priority 1 incidents in the state of either 'new' or 'active'.&#13;
	&#13;
	var num = 'INC0011024';&#13;
	var property_name = 'test_incident_notes';&#13;
	&#13;
	gr.addQuery('number', num);&#13;
	gr.query();&#13;
&#13;
	gr_properties.addQuery('name', property_name);&#13;
	gr_properties.query();&#13;
	&#13;
	var previous_note = ''&#13;
	while(gr_properties.next()) {&#13;
		previous_note = gr_properties.getValue('value');&#13;
		&#13;
		gs.info('demo previous note ' + previous_note);&#13;
	}&#13;
	&#13;
	gs.info('demo rows : ' + gr.getRowCount());&#13;
	&#13;
	var last_note = '';&#13;
	while(gr.next())&#13;
	{&#13;
		//print a list of the incident numbers updated&#13;
		gs.info('demo number : ' + gr.number);&#13;
&#13;
		//add an entry to the 'work notes' journal field for each incident&#13;
		// gr.work_notes = "This is a high-priority incident. Please prioritize.";&#13;
		&#13;
		var notes = gr.work_notes.getJournalEntry(-1);&#13;
		&#13;
		gs.info('demo notes : ' + notes);&#13;
		var na = notes.split("\n\n");&#13;
		last_note = na[0];&#13;
		&#13;
		gs.info('demo journal : ' + last_note);&#13;
	}&#13;
	&#13;
	if (previous_note == last_note) {&#13;
		return false;&#13;
	} else {&#13;
		return true;&#13;
	}&#13;
	&#13;
// 	var assertNotesUpdated = {&#13;
// 		name: "Assert that WS1 Action has updated notes with a response",&#13;
// 		"shouldBe": "hello",&#13;
// 		"value" : "hello"&#13;
// 	};&#13;
	&#13;
// 	assertEqual(assertNotesUpdated);&#13;
	&#13;
})(outputs, steps, stepResult, assertEqual);&#13;
// uncomment the next line to execute this script as a jasmine test&#13;
//jasmine.getEnv().execute();&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
